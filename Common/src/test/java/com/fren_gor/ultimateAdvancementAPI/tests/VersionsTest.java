package com.fren_gor.ultimateAdvancementAPI.tests;

import com.fren_gor.ultimateAdvancementAPI.util.Versions;
import org.junit.jupiter.api.Test;

import static com.fren_gor.ultimateAdvancementAPI.util.Versions.getApiVersion;
import static com.fren_gor.ultimateAdvancementAPI.util.Versions.getNMSVersionsList;
import static com.fren_gor.ultimateAdvancementAPI.util.Versions.getNMSVersionsRange;
import static com.fren_gor.ultimateAdvancementAPI.util.Versions.getSupportedNMSVersions;
import static com.fren_gor.ultimateAdvancementAPI.util.Versions.removeInitialV;
import static org.junit.jupiter.api.Assertions.*;

public class VersionsTest {

    @Test
    void apiVersionTest() throws Exception {
        // Class is generated by templating-maven-plugin
        Class<?> mavenProperties = Class.forName("com.fren_gor.ultimateAdvancementAPI.tests.MavenProperties");
        String mavenVersion = (String) mavenProperties.getDeclaredField("API_VERSION").get(null);
        String failMessage = "API_VERSION in Versions class is not the same as the pom.xml version. Please update the Versions.API_VERSION constant.";
        assertEquals(mavenVersion, Versions.getApiVersion(), failMessage);
    }

    @Test
    void removeInitialVTest() {
        assertEquals("1_15_R1", removeInitialV("v1_15_R1"));
        assertEquals("1_15_R1", removeInitialV("1_15_R1"));
        assertEquals("", removeInitialV(""));
        assertEquals("v1_15_R1", removeInitialV("vv1_15_R1"));
        assertNull(removeInitialV(null));
    }

    @Test
    void getNMSVersionTest() {
        Utils.mockServer(() -> assertEquals("mocked0_0_R1", Versions.getNMSVersion().get()));
    }

    @Test
    void notNullTest() {
        assertNotNull(getApiVersion());
        assertNotNull(getSupportedNMSVersions());
        for (String nms : getSupportedNMSVersions()) {
            assertNotNull(nms);
            assertNotNull(getNMSVersionsList(nms));
            assertNotNull(getNMSVersionsRange(nms));
        }
    }
}
